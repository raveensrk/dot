>,v
e,v
c,v
a,v
p,v
s,v
<,v
nmap <leader>fb :CtrlPBuffer<cr>,V
"======================================================================"" menu_init.vim -"" Created by skywind on 2019/12/26" Last Modified: 2019/12/26 16:23:48""======================================================================if has('patch-8.1.2292') == 0 && exists('*nvim_open_win') == 0	finishendifcall quickui#menu#reset()call quickui#menu#install("&File", [			\ [ "&Open\t(:w)", 'call feedkeys(":tabe ")'],			\ [ "&Save\t(:w)", 'write'],			\ [ "--", ],			\ [ "LeaderF &File", 'Leaderf file', 'Open file with leaderf'],			\ [ "LeaderF &Mru", 'Leaderf mru --regexMode', 'Open recently accessed files'],			\ [ "LeaderF &Buffer", 'Leaderf buffer', 'List current buffers in leaderf'],			\ [ "--", ],			\ [ "J&unk File", 'JunkFile', ''],			\ ])if has('win32') || has('win64') || has('win16')	call quickui#menu#install('&File', [				\ [ "--", ],				\ [ "Start &Cmd", 'silent !start /b cmd /C c:\drivers\clink\clink.cmd' ],				\ [ "Start &PowerShell", 'silent !start powershell.exe' ],				\ [ "Open &Explore", 'call Show_Explore()' ],				\ ])endifcall quickui#menu#install("&File", [			\ [ "--", ],			\ [ "E&xit", 'qa' ],			\ ])call quickui#menu#install("&Edit", [			\ ['Copyright &Header', 'call feedkeys("\<esc> ec")', 'Insert copyright information at the beginning'],			\ ['&Trailing Space', 'call StripTrailingWhitespace()', ''],			\ ['Update &ModTime', 'call UpdateLastModified()', ''],			\ ['&Paste Mode Line', 'PasteVimModeLine', ''],			\ ['Format J&son', '%!python -m json.tool', ''],			\ ['--'],			\ ['&Align Table', 'Tabularize /|', ''],			\ ['Align &Cheatsheet', 'MyCheatSheetAlign', ''],			\ ])call quickui#menu#install('&Symbol', [			\ [ "&Grep Word\t(In Project)", 'call MenuHelp_GrepCode()', 'Grep keyword in current project' ],			\ [ "--", ],			\ [ "Find &Definition\t(GNU Global)", 'call MenuHelp_Gscope("g")', 'GNU Global search g'],			\ [ "Find &Symbol\t(GNU Global)", 'call MenuHelp_Gscope("s")', 'GNU Gloal search s'],			\ [ "Find &Called by\t(GNU Global)", 'call MenuHelp_Gscope("d")', 'GNU Global search d'],			\ [ "Find C&alling\t(GNU Global)", 'call MenuHelp_Gscope("c")', 'GNU Global search c'],			\ [ "Find &From Ctags\t(GNU Global)", 'call MenuHelp_Gscope("z")', 'GNU Global search c'],			\ [ "--", ],			\ [ "Goto D&efinition\t(YCM)", 'YcmCompleter GoToDefinitionElseDeclaration'],			\ [ "Goto &References\t(YCM)", 'YcmCompleter GoToReferences'],			\ [ "Get D&oc\t(YCM)", 'YcmCompleter GetDoc'],			\ [ "Get &Type\t(YCM)", 'YcmCompleter GetTypeImprecise'],			\ ])call quickui#menu#install('&Move', [			\ ["Quickfix &First\t:cfirst", 'cfirst', 'quickfix cursor rewind'],			\ ["Quickfix L&ast\t:clast", 'clast', 'quickfix cursor to the end'],			\ ["Quickfix &Next\t:cnext", 'cnext', 'cursor next'],			\ ["Quickfix &Previous\t:cprev", 'cprev', 'quickfix cursor previous'],			\ ])call quickui#menu#install("&Build", [			\ ["File &Execute\tF5", 'AsyncTask file-run'],			\ ["File &Compile\tF9", 'AsyncTask file-build'],			\ ["File E&make\tF7", 'AsyncTask emake'],			\ ["File &Start\tF8", 'AsyncTask emake-exe'],			\ ['--', ''],			\ ["&Project Build\tShift+F9", 'AsyncTask project-build'],			\ ["Project &Run\tShift+F5", 'AsyncTask project-run'],			\ ["Project &Test\tShift+F6", 'AsyncTask project-test'],			\ ["Project &Init\tShift+F7", 'AsyncTask project-init'],			\ ['--', ''],			\ ["T&ask List\tCtrl+F10", 'call MenuHelp_TaskList()'],			\ ['E&dit Task', 'AsyncTask -e'],			\ ['Edit &Global Task', 'AsyncTask -E'],			\ ['&Stop Building', 'AsyncStop'],			\ ])call quickui#menu#install("&Git", [			\ ['&View Diff', 'call svnhelp#svn_diff("%")'],			\ ['&Show Log', 'call svnhelp#svn_log("%")'],			\ ['File &Add', 'call svnhelp#svn_add("%")'],			\ ])if has('win32') || has('win64') || has('win16') || has('win95')	call quickui#menu#install("&Git", [				\ ['--',''],				\ ["Project &Update\t(Tortoise)", 'call svnhelp#tp_update()', 'TortoiseGit / TortoiseSvn'],				\ ["Project &Commit\t(Tortoise)", 'call svnhelp#tp_commit()', 'TortoiseGit / TortoiseSvn'],				\ ["Project L&og\t(Tortoise)", 'call svnhelp#tp_log()',  'TortoiseGit / TortoiseSvn'],				\ ["Project &Diff\t(Tortoise)", 'call svnhelp#tp_diff()', 'TortoiseGit / TortoiseSvn'],				\ ['--',''],				\ ["File &Add\t(Tortoise)", 'call svnhelp#tf_add()', 'TortoiseGit / TortoiseSvn'],				\ ["File &Blame\t(Tortoise)", 'call svnhelp#tf_blame()', 'TortoiseGit / TortoiseSvn'],				\ ["File Co&mmit\t(Tortoise)", 'call svnhelp#tf_commit()', 'TortoiseGit / TortoiseSvn'],				\ ["File D&iff\t(Tortoise)", 'call svnhelp#tf_diff()', 'TortoiseGit / TortoiseSvn'],				\ ["File &Revert\t(Tortoise)", 'call svnhelp#tf_revert()', 'TortoiseGit / TortoiseSvn'],				\ ["File Lo&g\t(Tortoise)", 'call svnhelp#tf_log()', 'TortoiseGit / TortoiseSvn'],				\ ])endifcall quickui#menu#install('&Tools', [			\ ['Compare &History', 'call svnhelp#compare_ask_file()', ''],			\ ['&Compare Buffer', 'call svnhelp#compare_ask_buffer()', ''],			\ ['--',''],			\ ['List &Buffer', 'call quickui#tools#list_buffer("FileSwitch tabe")', ],			\ ['List &Function', 'call quickui#tools#list_function()', ],			\ ['Display &Messages', 'call quickui#tools#display_messages()', ],			\ ['--',''],			\ ["&DelimitMate %{get(b:, 'delimitMate_enabled', 0)? 'Disable':'Enable'}", 'DelimitMateSwitch'],			\ ['Read &URL', 'call menu#ReadUrl()', 'load content from url into current buffer'],			\ ['&Spell %{&spell? "Disable":"Enable"}', 'set spell!', 'Toggle spell check %{&spell? "off" : "on"}'],			\ ['&Profile Start', 'call MonitorInit()', ''],			\ ['Profile S&top', 'call MonitorExit()', ''],			\ ["Relati&ve number %{&relativenumber? 'OFF':'ON'}", 'set relativenumber!'],			\ ["Proxy &Enable", 'call MenuHelp_Proxy(1)', 'setup http_proxy/https_proxy/all_proxy'],			\ ["Proxy D&isable", 'call MenuHelp_Proxy(0)', 'clear http_proxy/https_proxy/all_proxy'],			\ ])call quickui#menu#install('&Plugin', [			\ ["&NERDTree\t<space>tn", 'NERDTreeToggle', 'toggle nerdtree'],			\ ['&Tagbar', '', 'toggle tagbar'],			\ ["&Choose Window/Tab\tAlt+e", "ChooseWin", "fast switch win/tab with vim-choosewin"],			\ ["-"],			\ ["&Browse in github\trhubarb", "Gbrowse", "using tpope's rhubarb to open browse and view the file"],			\ ["&Startify", "Startify", "using tpope's rhubarb to open browse and view the file"],			\ ["&Gist", "Gist", "open gist with mattn/gist-vim"],			\ ["&Edit Note", "Note", "edit note with vim-notes"],			\ ["&Display Calendar", "Calendar", "display a calender"],			\ ['Toggle &Vista', 'Vista!!', ''],			\ ["-"],			\ ["Plugin &List", "PlugList", "Update list"],			\ ["Plugin &Update", "PlugUpdate", "Update plugin"],			\ ])call quickui#menu#install('Help (&?)', [			\ ["&Index", 'tab help index', ''],			\ ['Ti&ps', 'tab help tips', ''],			\ ['--',''],			\ ["&Tutorial", 'tab help tutor', ''],			\ ['&Quick Reference', 'tab help quickref', ''],			\ ['&Summary', 'tab help summary', ''],			\ ['--',''],			\ ['&Vim Script', 'tab help eval', ''],			\ ['&Function List', 'tab help function-list', ''],			\ ['&Dash Help', 'call asclib#utils#dash_ft(&ft, expand("<cword>"))'],			\ ], 10000)" let g:quickui_show_tip = 1"----------------------------------------------------------------------" context menu"----------------------------------------------------------------------let g:context_menu_k = [			\ ["&Peek Definition\tAlt+;", 'call quickui#tools#preview_tag("")'],			\ ["S&earch in Project\t\\cx", 'exec "silent! GrepCode! " . expand("<cword>")'],			\ [ "--", ],			\ [ "Find &Definition\t\\cg", 'call MenuHelp_Fscope("g")', 'GNU Global search g'],			\ [ "Find &Symbol\t\\cs", 'call MenuHelp_Fscope("s")', 'GNU Gloal search s'],			\ [ "Find &Called by\t\\cd", 'call MenuHelp_Fscope("d")', 'GNU Global search d'],			\ [ "Find C&alling\t\\cc", 'call MenuHelp_Fscope("c")', 'GNU Global search c'],			\ [ "Find &From Ctags\t\\cz", 'call MenuHelp_Fscope("z")', 'GNU Global search c'],			\ [ "--", ],			\ [ "Goto D&efinition\t(YCM)", 'YcmCompleter GoToDefinitionElseDeclaration'],			\ [ "Goto &References\t(YCM)", 'YcmCompleter GoToReferences'],			\ [ "Get D&oc\t(YCM)", 'YcmCompleter GetDoc'],			\ [ "Get &Type\t(YCM)", 'YcmCompleter GetTypeImprecise'],			\ [ "--", ],			\ ['Dash &Help', 'call asclib#utils#dash_ft(&ft, expand("<cword>"))'],			\ ['Cpp&man', 'exec "Cppman " . expand("<cword>")', '', 'c,cpp'],			\ ['P&ython Doc', 'call quickui#tools#python_help("")', 'python'],			\ ]"----------------------------------------------------------------------" hotkey"----------------------------------------------------------------------nnoremap <silent><space><space> :call quickui#menu#open()<cr>nnoremap <silent>K :call quickui#tools#clever_context('k', g:context_menu_k, {})<cr>if has('gui_running') || has('nvim')	noremap <c-f10> :call MenuHelp_TaskList()<cr>endif,V
,V
git@github.com:skywind3000/vim-quickui.git,v
" let &showbreak = '+++ ',V
',v
" autocmd FileType sh set formatprg=shfmt\ % ,V
QuickFixCmdPost,v
,v
,,v
V,v
nmap <leader>c :wa \| silent make! \| redraw! \| copen \| clast<cr>nmap <leader>c :wa \| silent make! \| redraw! \| copen \| clast<cr>,V
command! -bar Helptags :call pathogen#helptags(),V,V
nmap <leader>c :wa \| silent make! \| redraw! \| copen \| clast<cr>,V
command! -bar Helptags :call pathogen#helptags(),V
nmap <leader>fl :CtrlPLine<CR>,V
nmap <leader>fr :CtrlPMRUFiles<CR>,V
Tags,v
nmap <leader>fm :CtrlPBookmark<CR>nmap <leader>ff :CtrlP<cr>nmap <leader>fr :CtrlPMRUFiles<CR>nmap <leader>fd :CtrlPBookmarkDir<CR>,V
nmap <leader>fr :CtrlPMRUFiles<CR>nmap <leader>fd :CtrlPBookmarkDir<CR>,V
nmap <leader>ff :CtrlP<cr>,V
nmap <leader>fb :CtrlPBuffer<CR> ,V
nmap <leader>fR :CtrlPClearAllCaches<cr>,V
nmap <leader>fq :CtrlPQuickfix<cr>,V
mixed,v
command! Tags CtrlPTag,V
fzf,v
https://www.google.com/search?q=%22vim%22+is+%22nice%22&client=safari&sca_esv=8154e9ae6af1589a&sxsrf=ACQVn08h7z9wvmOTf_SD-5fuzZdALtCLLQ%3A1710354059527&ei=i-7xZYPoH_Gavr0P38C02AQ&ved=0ahUKEwjD2aGx7fGEAxVxja8BHV8gDUsQ4dUDCA8&uact=5&oq=%22vim%22+is+%22nice%22&gs_lp=Egxnd3Mtd2l6LXNlcnAiDyJ2aW0iIGlzICJuaWNlIjIFECEYoAFI-RlQqQNYkBhwAXgBkAEAmAHKAaAB2gyqAQUwLjkuMbgBA8gBAPgBAZgCCKACrwnCAgoQABhHGNYEGLADwgILEAAYgAQYigUYkQLCAg4QABiABBiKBRiRAhixA8ICEBAuGEMYsQMYgAQY5QQYigXCAgoQABiABBiKBRhDwgIQEC4YgAQYigUYQxixAxjlBMICDRAAGIAEGIoFGEMYsQPCAgUQABiABMICCxAuGIAEGMcBGK8BmAMAiAYBkAYIkgcFMS41LjKgB_cx&sclient=gws-wiz-serp,v
emacs() {	echo "Do you mean vim?..."},V
unset -f emacs,V
export -f unlock-pdf,V
export -f vimpluginsunset -f unlock-pdfdeclare -fxr unlock-pdf,V
export -f emacsunset -f vimpluginsdeclare -fxr vimplugins,V
alias chatgpt="open https://chat.openai.com",V
alias clipboard=",note",V
alias note="vim ~/iCloud/inbox.txt",V
,,,,,,1
# source "$DOT/config/fzf"# source "$DOT/config/zoxide",V
export -f script,V
export -f dotunset -f scriptdeclare -fxr script,V
unset -f dotdeclare -fxr dot,V
emacs() {	echo "Do you mean vim?..."}unset -f dotdeclare -fxr dotdot() {	cd ~/dot || return }export -f dotunset -f scriptdeclare -fxr scriptscript() {	cd ~/script/ || return 2}export -f script,V
python3 -m pip install --upgrade pip,V
python3 -m pip install --user pynvim,V
[pull]	merge = true	rebase = false[merge]	tool = vimdiff[user]	name = Raveen Kumar	email = raveen.srk.kumar@gmail.com[maintenance]	repo = ~/my_repos/dotfiles-main[alias]	staash = stash --all[rerere]	enabled = true,V
nsri nnsri nnsri n,V
nsri n,V
ristensri n,V
/,v
git clone https://github.com/chrisbra/Colorizer ~/.vim/bundle/Colorizer ,V
