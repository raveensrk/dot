#!/usr/bin/env bash
# bashrc

# {{{ ENVIRONMENT VARIABLES
export DOT=$HOME/dot
export INPUTRC=$DOT/config/inputrc
export MYVIMRC=$DOT/config/vimrc
export VIMINIT=":source $MYVIMRC"
export EDITOR="vim"
export VISUAL="vim"
export TERM=xterm-256color
# export DISPLAY=:0
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/script:$PATH"
export PATH="$DOT/script:$PATH"
export PATH="$HOME/dot/lib:$PATH"
LIB="$DOT/lib" source "$DOT/lib/header.sh"
source "$DOT/config/prompt"
export LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH"
[ -d "$HOME/.cargo/bin" ] && export PATH="$HOME/.cargo/bin:$PATH"
# }}}
# {{{ BASH SHOPTS
# This will exit bash shell after pressing control d 2 times
export IGNOREEOF=1
# set -o vi
# shopt -s direxpand
# shopt -s dotglob
# shopt -s histappend
shopt -s autocd
# shopt -s cdable_vars
shopt -s cdspell
shopt -s checkjobs
shopt -s checkwinsize
shopt -s cmdhist
shopt -s dirspell
shopt -s execfail
shopt -s globstar
shopt -s histreedit
shopt -s histverify
shopt -s lithist
shopt -s no_empty_cmd_completion
shopt -s nocaseglob
shopt -s nocasematch
shopt -s progcomp_alias

export HISTCONTROL=erasedups:ignoredups
export HISTSIZE=-1
export HISTFILESIZE=-1
export HISTIGNORE=""
# export HISTTIMEFORMAT="[%F %T] "
export HISTFILE=~/.bash_history

# }}}
# {{{ ALIASES
if command -v bat >/dev/null; then
	alias cat=bat
fi
alias chop="tr -d '\n'" # Remove newline
alias untar="tar xvf"
alias hcat="paste -s" # To concatenate the contents of a vertical file horizontally
alias ..="cd .."
alias top2='top -d 0.125'
alias date2='date -I'
alias date2_yesterday='/bin/date -I -v-1d'
alias date2_long="date +%Y%m%d%H%M%S"
alias date2_long_long='date -Iseconds | sed "s/:/-/g"'
alias mkdir="mkdir -v"
alias cp="cp -vi"
alias mv="mv -vi"
alias rm="rm -vi"
alias tree2="tree -C"
alias tree3="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'" # https://github.com/you-dont-need/You-Dont-Need-GUI
alias rsync="rsync -CazhPvu"                                         # -C

# }}}
# {{{ PAGERS
alias less='less -s -R -wi -S --ignore-case'
export PAGER='less'
export MANPAGER='less'
export MANCOLOR="Yes"
# Less colors
#-------------------
# export LESS=
# export LESS_TERMCAP_Ss=$'\e[48;5;16m'
export LESS_TERMCAP_so=$'\e[38;5;3m'  #Yellow
export LESS_TERMCAP_us=$'\e[38;5;40m' #green
export LESS_TERMCAP_md=$'\e[38;5;4m'  #blue
export LESS_TERMCAP_mb=$'\e[38;5;1m'  #Red

export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_Se=$'\e[0m'

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Man colors
#------------------
man() {
	# LESS_TERMCAP_md=$'\e[01;31m'
	# LESS_TERMCAP_me=$'\e[0m'
	# LESS_TERMCAP_se=$'\e[0m'
	# LESS_TERMCAP_so=$'\e[01;44;33m'
	# LESS_TERMCAP_ue=$'\e[0m'
	# LESS_TERMCAP_us=$'\e[01;32m'
	command man "$@"
}
# }}}
# {{{ VIM
alias vimrc="vim $DOT/config/vimrc"
alias v="vim"
# }}}
# RANGER {{{
export RANGER="ranger -r $DOT/config/ranger"
ranger_cd() {
	temp_file="$(mktemp -t "ranger_cd.XXXXXXXXXX")"
	local dir_or_file

	[[ -f "$*" ]] && dir_or_file=$(dirname "$@") || dir_or_file="$*"

	$RANGER --choosedir="$temp_file" -- "${dir_or_file:-$PWD}"
	if chosen_dir="$(cat -- "$temp_file")" && [ -n "$chosen_dir" ] && [ "$chosen_dir" != "$PWD" ]; then
		cd "$chosen_dir" || return
	fi
	rm -f -- "$temp_file"
}

alias r="ranger_cd"

[ -n "$RANGER_LEVEL" ] && PS1="$PS1"'(in ranger) '
# }}}
# {{{ BUG FIXES
# MACOS Specific {{{

if [ "$(uname -a | awk '{print $1}')" = "Darwin" ]; then
	eval "$(/opt/homebrew/bin/brew shellenv)"
	# https://github.com/platformio/platformio-atom-ide-terminal/issues/196
	update_terminal_cwd() {
		# Identify the directory using a "file:" scheme URL,
		# including the host name to disambiguate local vs.
		# remote connections. Percent-escape spaces.
		local SEARCH=' '
		local REPLACE='%20'
		local PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}"
		printf '\e]7;%s\a' "$PWD_URL"
	}
fi

# }}}
# }}}
# {{{ GREP
find-grep() {
	echo '''
    find -L . -type f -exec grep --color=auto -nHi --null -e string {} \;
    '''
}
# }}}
# Convenience{{{
alias hexdump="hexdump -Cv"
alias compress="tar -cvza -f "
github() { open "$(echo "https://github.com/search?q=$*&type=repositories&s=stars&o=desc" | tr ' ' '+')"; }
git_pickaxe() { git log -p -S "$@"; }
# }}}
os=$(uname -a | cut -d ' ' -f 1)
export os
if [[ $os == "Darwin" ]]; then
	source "$DOT/config/macos"
else
	export PATH="$DOT/bin/linux:$PATH"
fi
source "$DOT/config/fzf.sh"
source "$DOT/config/cd2.sh"
# shellcheck disable=1091
[[ -f "$HOME/script/custom/custom.sh" ]] && source "$HOME/script/custom/custom.sh"
alias path="echo \$PATH | tr ':' '\n' | tac"
alias ls="ls -X --group-directories-first  --color"
alias l="ls -X --group-directories-first  --color -lAh"
alias bashrc="vim \$DOT/config/bashrc"
resetbash() {
	clear
	echo Resetting...
	sleep 1
	source "$DOT/config/bashrc"
}
alias git_diff='git diff --minimal -w -b -M --word-diff'
eval "$(direnv hook bash)"
export COLORTERM="Yes"
export PATH="$HOME/.local/bin:$PATH"
export PATH="$DOT/script:$PATH"
export EDITOR="vim"
export VISUAL="vim"
alias q="exit"
alias grep="grep --color"
source "$DOT/script/fd2.sh"
source "$DOT/script/recursively_add_to_path.sh"
recursively_add_to_path "$HOME/script"
d() {
	dir="$(which "$1" | xargs dirname)"
	if [[ -d "$dir" ]]; then
		if ! cd "$dir"; then
			echor "Unable to change directory = $dir"
			return 2
		fi
	else
		echor "Not a directory = $dir"
		return 2
	fi
}
export PYTHONPATH+=":$DOT/lib:$HOME/python_venv/lib/python3.12/site-packages:$DOT/config/vim/snippet/python"
export PATH="$DOT/config/vim/plugin:$PATH"
export PATH="$DOT/config/vim/snippet/python:$PATH"
source "$DOT/config/gitconfig"
alias tmux="tmux attach || tmux"
alias t="tmux"
ffd() {
	dir="$(find $(cat "$HOME/script/fff_list.txt" | envsubst) -type d | fzf -m +s)"
	pushd2 $dir
}

fff() {
	file="$(find $(cat "$HOME/script/fff_list.txt" | envsubst) -type f | fzf -m +s)"
	echoy "Opening file in vim: $file"
	vim $file
}
export HOWDOI_COLORIZE=1
alias howdoi="howdoi -a"
if [[ -f ~/python_venv/bin/activate ]]; then
	source ~/python_venv/bin/activate
fi
if command -v starship >/dev/null; then
	eval "$(starship init bash)"
fi
