#!/usr/bin/env bash
# bashrc

# {{{ ENVIRONMENT VARIABLES
export EDITOR="vim"
export VISUAL="vim"
export DOT=$HOME/dot
export INPUTRC=$DOT/config/inputrc
export MYVIMRC=$DOT/config/vimrc
export VIMINIT=":source $MYVIMRC"
export TERM=xterm-256color
export COLORTERM="Yes"
# export DISPLAY=:0
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/script:$PATH"
export PATH="$DOT/script:$PATH"
# shellcheck disable=1091
source "$DOT/script/header.sh"
# shellcheck disable=1091
source "$DOT/config/prompt"
export LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH"
# }}}
# {{{ BASH SHOPTS
# This will exit bash shell after pressing control d 2 times
export IGNOREEOF=1
set -o emacs
# shopt -s direxpand
# shopt -s dotglob
# shopt -s histappend
shopt -s autocd
# shopt -s cdable_vars
shopt -s cdspell
shopt -s checkjobs
shopt -s checkwinsize
shopt -s cmdhist
shopt -s dirspell
shopt -s execfail
shopt -s globstar
shopt -s histreedit
shopt -s histverify
shopt -s lithist
shopt -s no_empty_cmd_completion
shopt -s nocaseglob
shopt -s nocasematch
shopt -s progcomp_alias

export HISTCONTROL=erasedups:ignoredups
export HISTSIZE=-1
export HISTFILESIZE=-1
export HISTIGNORE=""
# export HISTTIMEFORMAT="[%F %T] "
export HISTFILE=~/.bash_history

# }}}
# {{{ ALIASES
if command -v bat >/dev/null; then alias cat=bat; fi
alias chop="tr -d '\n'" # Remove newline
alias untar="tar xvf"
alias hcat="paste -s" # To concatenate the contents of a vertical file horizontally
alias ..="cd .."
alias top2='top -d 0.125'
alias date2='date -I'
alias date2_yesterday='/bin/date -I -v-1d'
alias date2_long="date +%Y%m%d%H%M%S"
alias date2_long_long='date -Iseconds | sed "s/:/-/g"'
alias mkdir="mkdir -v"
alias cp="cp -vi"
alias mv="mv -vi"
# alias rm="rm -vi"
alias tree2="tree -C"
alias tree3="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'" # https://github.com/you-dont-need/You-Dont-Need-GUI
alias rsync="rsync -CazhPvu"                                         # -C
alias path="echo \$PATH | tr ':' '\n' | tac"
alias bashrc="vim \$DOT/config/bashrc"
alias q="exit"
alias git_diff='git diff --minimal -w -b -M --word-diff'
alias git_pickaxe="git log -p -S"
alias grep="grep --color"
alias tmux="tmux attach || tmux"
alias t="tmux"
export HOWDOI_COLORIZE=1
alias howdoi="howdoi -a"
alias hexdump="hexdump -Cv"
alias compress="tar -cvza -f "

# }}}
# {{{ PAGERS
alias less='less -s -R -wi -S --ignore-case'
export PAGER='less'
export MANPAGER='less'
export MANCOLOR="Yes"
# Less colors
#-------------------
# export LESS=
# export LESS_TERMCAP_Ss=$'\e[48;5;16m'
export LESS_TERMCAP_so=$'\e[38;5;3m'  #Yellow
export LESS_TERMCAP_us=$'\e[38;5;40m' #green
export LESS_TERMCAP_md=$'\e[38;5;4m'  #blue
export LESS_TERMCAP_mb=$'\e[38;5;1m'  #Red

export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_Se=$'\e[0m'

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Man colors
#------------------
man() {
	# LESS_TERMCAP_md=$'\e[01;31m'
	# LESS_TERMCAP_me=$'\e[0m'
	# LESS_TERMCAP_se=$'\e[0m'
	# LESS_TERMCAP_so=$'\e[01;44;33m'
	# LESS_TERMCAP_ue=$'\e[0m'
	# LESS_TERMCAP_us=$'\e[01;32m'
	command man "$@"
}
# }}}
# {{{ VIM
alias vimrc="vim \$DOT/config/vimrc"
alias v="vim"
# }}}
# RANGER {{{
export RANGER="ranger -r $DOT/config/ranger"
ranger_cd() {
	temp_file="$(mktemp -t "ranger_cd.XXXXXXXXXX")"
	local dir_or_file

	[[ -f "$*" ]] && dir_or_file=$(dirname "$@") || dir_or_file="$*"

	$RANGER --choosedir="$temp_file" -- "${dir_or_file:-$PWD}"
	if chosen_dir="$(cat -- "$temp_file")" && [ -n "$chosen_dir" ] && [ "$chosen_dir" != "$PWD" ]; then
		cd "$chosen_dir" || return
	fi
	rm -f -- "$temp_file"
}

alias r="ranger_cd"

[ -n "$RANGER_LEVEL" ] && PS1="$PS1"'(in ranger) '
# }}}
# {{{ OS SPECIFIC
os=$(uname -a | cut -d ' ' -f 1)
export os
if [[ $os == "Darwin" ]]; then
	# shellcheck disable=1091
	eval "$(/opt/homebrew/bin/brew shellenv)"
	source "$DOT/config/macos"
	alias ls="gls -X --group-directories-first  --color"
	alias l="gls -X --group-directories-first  --color -lAh"
	alias ctags="/opt/homebrew/bin/ctags"
	# https://github.com/platformio/platformio-atom-ide-terminal/issues/196
	update_terminal_cwd() {
		# Identify the directory using a "file:" scheme URL,
		# including the host name to disambiguate local vs.
		# remote connections. Percent-escape spaces.
		local SEARCH=' '
		local REPLACE='%20'
		local PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}"
		printf '\e]7;%s\a' "$PWD_URL"
	}
else
	alias ls="ls -X --group-directories-first  --color"
	alias l="ls -X --group-directories-first  --color -lAh"
	export PATH="$DOT/bin/linux:$PATH"
	# if command -v universal-ctags >/dev/null; then
	# 	alias ctags='universal-ctags'
	# fi
fi
# }}}
# FUNCTIONS {{{
github() { open "$(echo "https://github.com/search?q=$*&type=repositories&s=stars&o=desc" | tr ' ' '+')"; }
resetbash() {
	clear
	echo Resetting...
	sleep 1
	# shellcheck disable=1091
	source "$DOT/config/bashrc"
}
# }}}
# PATH {{{
export PATH="$HOME/.local/bin:$PATH"
export PATH="$DOT/script:$PATH"
export PATH="$DOT/config/vim/plugin:$PATH"
export PATH="$DOT/config/vim/snippet/python:$PATH"
export PATH+=":$HOME/script"
export PYTHONPATH+=":$DOT/script"
export PYTHONPATH+=":$HOME/work/practice/python"
[ -d "$HOME/.cargo/bin" ] && export PATH+=":$HOME/.cargo/bin"
# }}}
# FIND FILES AND DIRECTORIES FUNCTIONS{{{
d() {
	if [ -f "$1" ]; then
		dir="$(which "$1" | xargs dirname)"
	else
		dir="$1"
	fi

	if ! pushd "$dir"; then
		echor "Unable to change directory = $dir"
		return 2
	fi
}


# }}}
# PYTHON{{{
export PYTHONSTARTUP="$DOT/config/pythonrc"
export PYTHONIOENCODING=utf8

pytest2() {
	pytest
	if command -v open >/dev/null; then
		open ./tui_files/html_report.html
	elif command -v xdg-open >/dev/null; then
		xdg-open ./tui_files/html_report.html
	else
		# Anyother command
		true
	fi
}

alias pip_upgrade='pip install --upgrade pip'

# }}}
# GIT{{{
# shellcheck disable=1091
source "$DOT/config/gitconfig"
# }}}
# ARCHIVE{{{
eval "$(direnv hook bash)"
eval "$(pandoc --bash-completion)"
# }}}
# Slurm{{{
# https://slurm.schedmd.com/squeue.html

# Combile the blow commands with watch command to get a dashboard like thing

alias srun2_pty="srun --partition ondemand-queue --export ALL --pty --job-name BASH -- bash --login"
export srun2_pty="srun --partition ondemand-queue --export ALL --pty --job-name BASH -- bash --login"
alias srun2="srun --partition ondemand-queue --export=ALL --job-name job1 "
alias squeue2='squeue -u rkumar -o "%.5i %.10P %.60j %.8u %.2t %.10M %.20V %.20e %.6D %.30R %.20B %r %R"'
alias sacct2='sacct -u rkumar --allocations --format=jobid,partition,jobname%60,workdir,user,start,elapsed,timelimit,end,state,exitcode,comment'
alias sacct3='sacct -u rkumar --allocations --format=jobid,jobname%60,user,start,elapsed,timelimit,end,state,exitcode'

# }}}
# TRASH CAN{{{
alias rm="trash -v"
eval "$(shtab --print-own-completion bash)"
eval "$(trash --print-completion bash)"
# }}}
# FZF{{{
# shellcheck disable=1091
. "$DOT/config/fzf.sh"
eval "$(zoxide  init bash --cmd cd)"
#}}}
# FINAL CUSTOM{{{
# shellcheck source=../../script/custom/custom.sh
if [[ -f "$HOME/script/custom/custom.sh" ]]; then
	source "$HOME/script/custom/custom.sh"
fi
# }}}
