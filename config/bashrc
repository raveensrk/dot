#!/usr/bin/env bash
# bashrc

export DOT=$HOME/dot
source "$DOT/config/prompt"
# {{{ ENVIRONMENT VARIABLES
alias neomutt="neomutt"
export INPUTRC=$DOT/config/inputrc
export MYVIMRC=$DOT/config/vimrc
export VIMINIT=":source $MYVIMRC"
export EDITOR="vim"
export VISUAL="vim"
export TERM=xterm-256color
is_linux=$(uname -a | cut -d ' ' -f 1)
export is_linux
# export DISPLAY=:0
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/script:$PATH"
export PATH="$DOT/script:$PATH"
export LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH"
[ -d "$HOME/.cargo/bin" ] && export PATH="$HOME/.cargo/bin:$PATH"
if [ -d /var/lib/flatpak/exports/bin ]; then
	export PATH="/var/lib/flatpak/exports/bin:$PATH"
fi
# }}}
# {{{ BASH SHOPTS
# This will exit bash shell after pressing control d 5 times
export IGNOREEOF=5
# shopt -s direxpand
# shopt -s histappend
# set -o vi
shopt -s checkwinsize
shopt -s checkjobs
shopt -s execfail
shopt -s cmdhist
shopt -s lithist
shopt -s no_empty_cmd_completion
# shopt -s dotglob
shopt -s dirspell
shopt -s globstar
shopt -s nocaseglob
shopt -s nocasematch
shopt -s progcomp_alias


export HISTCONTROL="ignoredups,erasedups"
export HISTSIZE=1000
export HISTFILESIZE=1000
export HISTIGNORE=""
export HISTTIMEFORMAT="[%F %T] "
export HISTFILE=~/.bash_history
export PROMPT_COMMAND="$PROMPT_COMMAND"
# export PROMPT_COMMAND="$PROMPT_COMMAND"

# }}}
# {{{ ALIASES
if command -v bat >/dev/null; then
	alias cat=bat
fi
alias ,chop="tr -d '\n'"         # Remove newline
alias ,transposevh="tr '\n' ' '" # Transpose vertical to horizontal
alias ,transposehv="tr ' ' '\n'" # Transpose horizontal to vertical
alias ,untar="tar xf"
alias ,hcat="paste -s" # To concatenate the contents of a vertical file horizontally
# LS aliases
alias ..="cd .."
alias ,top_faster_refresh='top -d 0.125'
alias ,date='date -I'
alias ,date_yesterday='/bin/date -I -v-1d'
alias ,date1="date +%Y%m%d%H%M%S"
alias ,date2='date -Iseconds | sed "s/:/-/g"'
alias mkdir="mkdir -v"
alias cp="cp -vi"
alias mv="mv -vi"
alias rm="rm -vi"
alias ,tree="tree -C"
alias ,tree2="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'" # https://github.com/you-dont-need/You-Dont-Need-GUI
alias ,rsync="rsync -CazhPvu"                                         # -C

# }}}
# {{{ PAGERS
export PAGER='less'
export MANPAGER='less'
# Less colors
#-------------------
alias less='less --ignore-case'
export LESS=-wRi
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin blink
export LESS_TERMCAP_md=$'\E[1;36m'     # begin bold
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline
export LESS_TERMCAP_Ss=$'\E[1;36m'     # begin underline
export LESS_TERMCAP_Se=$'\E[0m'        # reset underline

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Man colors
#------------------
man() {
	LESS_TERMCAP_md=$'\e[01;31m' LESS_TERMCAP_me=$'\e[0m' LESS_TERMCAP_se=$'\e[0m' LESS_TERMCAP_so=$'\e[01;44;33m' LESS_TERMCAP_ue=$'\e[0m' LESS_TERMCAP_us=$'\e[01;32m' command man "$@"
}
# }}}
# {{{ VIM
alias ,vimrc="vim ~/.vimrc"
alias v="vim -c 'History'"
alias vl='vim -c "normal '\''0"'
# }}}
# RANGER {{{
export RANGER="ranger -r $DOT/config/ranger"
ranger_cd() {
	temp_file="$(mktemp -t "ranger_cd.XXXXXXXXXX")"
	local dir_or_file

	[[ -f "$*" ]] && dir_or_file=$(dirname "$@") || dir_or_file="$*"

	$RANGER --choosedir="$temp_file" -- "${dir_or_file:-$PWD}"
	if chosen_dir="$(cat -- "$temp_file")" && [ -n "$chosen_dir" ] && [ "$chosen_dir" != "$PWD" ]; then
		cd "$chosen_dir" || return
	fi
	rm -f -- "$temp_file"
}

alias r="ranger_cd"

[ -n "$RANGER_LEVEL" ] && PS1="$PS1"'(in ranger) '
# }}}
# {{{ BUG FIXES
# MACOS Specific {{{
if [ "$(uname -a | awk '{print $1}')" = "Darwin" ]; then
	eval "$(/opt/homebrew/bin/brew shellenv)"
	# https://github.com/platformio/platformio-atom-ide-terminal/issues/196
	update_terminal_cwd() {
		# Identify the directory using a "file:" scheme URL,
		# including the host name to disambiguate local vs.
		# remote connections. Percent-escape spaces.
		local SEARCH=' '
		local REPLACE='%20'
		local PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}"
		printf '\e]7;%s\a' "$PWD_URL"
	}
fi

# }}}
# }}}
# {{{ GREP
,find-grep() {
	echo '''
    find -L . -type f -exec grep --color=auto -nHi --null -e string {} \;
    '''
}
# }}}
# Convenience{{{
alias ,hexdump="hexdump -Cv"
alias ,compress="tar -cva -f "
alias ,chatgpt="open https://chat.openai.com"
alias ,note="vim ~/iCloud/inbox.txt"
alias ,clipboard=",note"
,github() { open "$(echo "https://github.com/search?q=$*&type=repositories&s=stars&o=desc" | tr ' ' '+')" ; }
,git_pickaxe () { git log -p -S "$@" ; }
alias dc="cd -"
# }}}
os=$(uname -a | cut -d ' ' -f 1)
export os
source "$DOT/config/fzf"
[[ $os = "Darwin" ]] && source "$DOT/config/macos"
# shellcheck source-path=~/script
[[ -f "$HOME/script/custom.sh" ]] && source "$HOME/script/custom.sh"
alias path="echo \$PATH | tr ':' '\n'"
alias gl="lazygit -p \$DOT"
