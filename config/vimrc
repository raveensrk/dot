source $VIMRUNTIME/vimrc_example.vim
set runtimepath^=~/dot/config/vim
let g:pathogen_blacklist = ['Damian-Conway-s-Vim-Setup']
if ($is_linux != "Darwin") 
    let g:pathogen_blacklist += ['vim-ai.git']
endif

execute pathogen#infect()
syntax on
filetype plugin indent on

" HELP {{{
" Press <F1> for help
" K for help for word under cursor
" }}}
" BASICS {{{
set autoread
set mouse=""
set nocompatible
" set hidden
set backspace=indent,eol,start
set encoding=utf-8
set noerrorbells
set novb t_vb=
" set vb t_vb=[?5h$<100>[?5l

" Use a line cursor within insert mode and a block cursor everywhere else.
"
" Reference chart of values:
"   Ps = 0  -> blinking block.
"   Ps = 1  -> blinking block (default).
"   Ps = 2  -> steady block.
"   Ps = 3  -> blinking underline.
"   Ps = 4  -> steady underline.
"   Ps = 5  -> blinking bar (xterm).
"   Ps = 6  -> steady bar (xterm).
" let &t_SI = "\e[6 q"
" let &t_EI = "\e[2 q"
" }}}
" NAVIGATION {{{
" set splitbelow splitright
" }}}
" GRAMMAR AND SEARCHING {{{
" set spell spelllang=en_us
" set textwidth=80
set isk+=-
set ignorecase
set smartcase
set dictionary="/usr/share/dict/words"
" }}}
" TABBING AND INDENT {{{
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent
set smarttab
" set listchars=nbsp:_,tab:>-,trail:~,extends:>,precedes:<,eol:$
" set list
" }}}
" FOLDING AND WRAPPING {{{
set foldmethod=marker
" }}}
" {{{ NUMBERING
" set nonumber norelativenumber
set nonumber 
" set relativenumber
" }}}
" {{{ INTERFACE
set pumheight=5
set completeopt="menu,preview"
set wrap
set nolinebreak
set cursorlineopt=screenline,number
set cursorline
set hlsearch
set incsearch
set ruler
" set columns=80
set colorcolumn=79
highlight ColorColumn ctermbg=233
highlight clear CursorLine
highlight clear CursorLineNr
highlight CursorLine ctermbg=235
highlight CursorLineNr ctermbg=235
" set wildmode=longest,list,full
set wildmode=lastused,full
set wildmenu
set wildignore=""
set wildignorecase
" set wildoptions=pum
set wildoptions=tagfile,fuzzy
" These 2 settings will force the cursor line to always be at the center of
" the screen
set scrolloff=999
set sidescrolloff=1
set sidescroll=1
set scrollopt=ver,jump,hor

" set virtualedit=all
" set virtualedit=
" set textwidth=0 wrapmargin=0
" }}}
" {{{ BACKUPS AND UNDO
if ! isdirectory(expand("~/.vim/undo"))   | call mkdir(expand("~/.vim/undo"),   'p') | endif
if ! isdirectory(expand("~/.vim/backup")) | call mkdir(expand("~/.vim/backup"), 'p') | endif
set undodir=$HOME/.vim/undo
set backupdir=$HOME/.vim/backup
set noswapfile
set backup
set writebackup
set undofile
" }}}
" {{{ NETRW
let g:netrw_dirhistmax=10
" let g:netrw_altv = 1
" let g:netrw_banner = 0
" let g:netrw_browse_split = 2
let g:netrw_liststyle = 3
" let g:netrw_winsize = 25
" augroup ProjectDrawer
"   autocmd!
"   autocmd VimEnter * :Vexplore
" augroup END
let g:netrw_keepdir=1
"}}}
" {{{ VIM SESSIONS AND VIEWS
" autocmd BufWinLeave *.* mkview!
" autocmd BufWinEnter *.* silent loadview
" augroup my_folding
"   au BufReadPre * setlocal foldmethod=indent
"   au BufWinEnter * if &fdm == 'indent' | setlocal foldmethod=manual | endif
" augroup END
" }}}
"{{{ FINALLY SOURCE CUSTOM PER USER CONGIFS

"}}}
" â†‘ WORKING CONFIGS ABOVE â†‘
" â†“ TESTING â†“


" set statusline=[%n]%m%r%f%=%h%w%y%q%k[%p%%][%04l,%04v][%L]%S
set previewpopup=height:10,width:60
set browsedir="buffer"
set title
set titlestring=%f
set titleold="Terminal"
set helpheight=10
function! Bookmarks()
    setlocal errorformat+=%f%.%#
    lexp  eval('g:netrw_bookmarklist')
    lopen 5
endfunction
" set complete+=t
" set wildoptions=pum
set completeopt+=menu,preview
set makeef=/tmp/errorfile
set foldclose="all"
set showfulltag
set maxcombine=6
set verbosefile=/tmp/verbosefile
set whichwrap+=<,>,[,]
set equalalways
set winfixheight
set winfixwidth
set isfname-==
set isfname-=,

packadd cfilter
set switchbuf=uselast
autocmd! BufEnter *.log setlocal readonly 
autocmd! BufEnter *.log setlocal nowrap
" autocmd QuickFixCmdPost make set wrap
" autocmd QuickFixCmdPost make set nowinfixheight nowinfixwidth
set viminfo+=r/opt/homebrew/
set viminfo+=r~/.vim/plugged
" set exrc secure
let mapleader = " "

" set path+=**;~/ " This is awesome but find search takes too long
set tags=./tags,../tags
" set path+=*
" set path+=.*
" set path+=./;~/
set path+=~/script
set path+=~/dot/**
set showtabline=2
set showcmdloc="last"
set showcmd
set showmode
" autocmd! BufWritePre
" autocmd BufWritePre *.txt s/ \+$//e
let g:ft_man_folding_enable = 1
" autocmd FileType man setlocal foldmethod=indent foldenable
let g:ft_man_no_sect_fallback = 1
set keywordprg=:Man
set hidden
let g:netrw_hide=1

if filereadable(expand('~/script/custom.vim'))
    execute 'source ' . expand('~/script/custom.vim')
endif
" set gdefault
command! Format :norm mmggVGgq`m
set autochdir
"
" autocmd CursorMoved * redraw!
" colo gruvbox
set background=dark

set showmode
set showcmd
set shortmess+=I
set virtualedit=block
" start of line
cnoremap <C-A>		<Home>
" back one character
cnoremap <C-B>		<Left>
" delete character under cursor
cnoremap <C-D>		<Del>
" end of line
cnoremap <C-E>		<End>
" forward one character
cnoremap <C-F>		<Right>
" recall newer command-line
cnoremap <C-N>		<Down>
" recall previous (older) command-line
cnoremap <C-P>		<Up>
" back one word
cnoremap <Esc><C-B>	<S-Left>
" forward one word
cnoremap <Esc><C-F>	<S-Right>
set laststatus=0
